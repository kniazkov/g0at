/**
 * @file vm.h
 * @copyright 2025 Ivan Kniazkov
 * @brief Defines the virtual machine for the Goat programming language.
 * 
 * This file contains the interface for the virtual machine (VM) that executes bytecode
 * instructions in the Goat programming language. The virtual machine is responsible for 
 * interpreting and executing the bytecode generated by the Goat compiler, managing memory, 
 * and interacting with the runtime environment.
 * 
 * The primary function provided by this file is `run()`, which starts the execution of 
 * the bytecode.
 */

#pragma once

#include "bytecode.h"

/**
 * @brief Executes the Goat bytecode.
 * 
 * This function runs the provided bytecode in the Goat virtual machine. It interprets and executes
 * the instructions encoded in the bytecode, performing the operations defined by the Goat
 * language. The function initializes the virtual machine state, executes the bytecode, and handles
 * any runtime errors or exceptions that may occur during execution.
 * 
 * @param code Bytecode to be executed.
 * @return An integer status code indicating the result of the execution. Typically, a non-zero
 * value indicates an error, while zero means successful execution.
 */
int run(bytecode_t *code);
